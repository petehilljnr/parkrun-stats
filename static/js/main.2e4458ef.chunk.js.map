{"version":3,"sources":["pages/Home.js","parkrun.png","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","data","setData","getData","a","fetch","response","json","jsonData","useEffect","StatCard","props","Card","className","Body","Title","stat","Subtitle","units","Text","description1","description2","Container","fluid","CardGroup","length","map","item","Nav","styled","div","Logo","TitleBar","Header","src","clientLogo","alt","height","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSA0DeA,EA7CF,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,KAGXC,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAbzB,wFAYgB,cACRC,EADQ,gBAESA,EAASC,OAFlB,OAERC,EAFQ,OAGdN,EAAQM,GAHM,2CAAH,qDAMbC,qBAAU,WACRN,MACC,IAEH,IAAMO,EAAW,SAACC,GAed,OAdc,cAACC,EAAA,EAAD,CAAMC,UAAU,YAAhB,SACd,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,UAAaJ,EAAMK,OACnB,cAACJ,EAAA,EAAKK,SAAN,CAAeJ,UAAU,kBAAzB,SACGF,EAAMO,QAET,eAACN,EAAA,EAAKO,KAAN,WACGR,EAAMS,aAAa,uBACnBT,EAAMU,sBAUf,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,cAACC,EAAA,EAAD,UACDvB,GACCA,EAAKwB,OAAS,GACdxB,EAAKyB,KAAI,SAACC,GAAD,OACP,cAACjB,EAAD,CAAUM,KAAMW,EAAKX,KAAME,MAAOS,EAAKT,MAAOE,aAAcO,EAAKP,aAAcC,aAAcM,EAAKN,uB,uBCnD7F,MAA0B,oC,QCInCO,EAAMC,IAAOC,IAAV,0IAQHC,EAAOF,IAAOC,IAAV,qFAKJE,EAAWH,IAAOC,IAAV,sKA0BCG,EAhBA,WACX,OACI,mCACI,eAACL,EAAD,WACI,cAACG,EAAD,UACI,qBAAKG,IAAKC,EAAYC,IAAI,UAAUC,OAAQ,OAEhD,cAACL,EAAD,wDClBDM,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,GAAGC,OAAK,EAACC,UAAW1C,UCEzB2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2e4458ef.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, NavItem, Card, CardGroup } from \"react-bootstrap\";\r\n\r\nconst RESULTS_URL =\r\n  \"https://raw.githubusercontent.com/petehilljnr/parkrun-stats/master/data/results.json\";\r\n\r\nconst chunk = (arr, chunkSize = 1, cache = []) => {\r\n  const tmp = [...arr];\r\n  if (chunkSize <= 0) return cache;\r\n  while (tmp.length) cache.push(tmp.splice(0, chunkSize));\r\n  return cache;\r\n};\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(RESULTS_URL);\r\n    const jsonData = await response.json();\r\n    setData(jsonData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const StatCard = (props) => {\r\n      const card = (<Card className=\"mx-1 my-2\">\r\n      <Card.Body>\r\n        <Card.Title>{props.stat}</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          {props.units}\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          {props.description1}<br/>\r\n          {props.description2}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n\r\n      )\r\n      return card;\r\n  }\r\n\r\n\r\n  return (\r\n    <Container fluid>\r\n        <CardGroup>\r\n      {data &&\r\n        data.length > 0 &&\r\n        data.map((item) => (\r\n          <StatCard stat={item.stat} units={item.units} description1={item.description1} description2={item.description2} />\r\n        ))}\r\n        </CardGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/parkrun.23c1fc26.png\";","import React from 'react';\r\nimport clientLogo from '../parkrun.png'\r\nimport styled from 'styled-components';\r\n\r\nconst Nav = styled.div`\r\n    background: #28203A;\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100vw;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    justify-content: flex-start;\r\n    margin-left: 10px\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  margin-left: 1.5rem;\r\n  font-size: 1.5rem;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = () => {\r\n    return(\r\n        <>\r\n            <Nav>\r\n                <Logo>\r\n                    <img src={clientLogo} alt=\"Parkrun\" height={65} />\r\n                    </Logo>\r\n                <TitleBar>\r\n                    Dunedin Parkrun - Interesting Stats\r\n                </TitleBar>\r\n            </Nav>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;\r\n","import './App.css';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path='' exact component={Home} />        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}