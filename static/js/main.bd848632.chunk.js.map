{"version":3,"sources":["pages/Cards.js","components/dc/cxContext.js","components/dc/chartTemplate.js","components/dc/yearEventAvg.js","components/dc/monthEventAvg.js","components/dc/ageEventAvg.js","components/dc/ageFinishAvg.js","components/dc/dashboard.js","pages/Charts.js","pages/About.js","parkrun.png","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","useState","data","setData","getData","a","fetch","response","json","jsonData","shuffled","sort","Math","random","useEffect","console","log","length","Container","StatCard","props","Col","style","textAlign","Card","className","text","backgroundColor","Body","Title","fontSize","marginBottom","textShadow","stat","Subtitle","fontStyle","units","Text","description1","color","description2","Row","xs","md","xl","paddingTop","map","item","index","CXContext","React","createContext","DataContext","state","loading","hasNDX","this","setState","d3","then","d","f","forEach","actual_holiday","age","gender","holiday_weekend","tutu","section","age_grading","event_day","event_month","event_year","finish_time","ndx","crossfilter","Provider","value","ref","parent","children","Component","ResetButton","float","padding","cursor","onClick","chart","filterAll","dc","ChartTemplate","context","useContext","updateChart","div","useRef","newChart","chartFunction","current","render","title","divRef","c","dimension","groupAll","group","reduce","p","v","grouping","height","transitionDuration","valueAccessor","key","round","Object","values","colors","elasticX","ordering","parseInt","xAxis","ticks","YearEventAvg","label","Date","toLocaleDateString","month","MonthEventAvg","AgeEventAvg","hoursandminsformat","count","total","minutes","AgeFinishAvg","Dashboard","Charts","About","now","TitleBar","styled","span","Header","Navbar","collapseOnSelect","fixed","bg","expand","variant","Brand","href","src","clientLogo","alt","transform","Toggle","aria-controls","Collapse","id","justifyContent","Nav","to","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd848632.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nconst RESULTS_URL =\r\n  \"https://raw.githubusercontent.com/petehilljnr/parkrun-stats/master/data/results.json\";\r\n\r\nconst Cards = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(RESULTS_URL);\r\n    const jsonData = await response.json();\r\n    \r\n    const shuffled = jsonData.sort(() => Math.random() - 0.5);\r\n    setData(shuffled);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  console.log(data)\r\n  if (!data.length > 0)\r\n    return (\r\n      <Container>\r\n        <h3>Loading data...</h3>\r\n      </Container>\r\n    );\r\n\r\n  const StatCard = (props) => {\r\n    const card = (\r\n      <Col style={{ textAlign: \"center\" }}>\r\n        <Card\r\n          className=\"mb-2\"\r\n          text={\"white\"}\r\n          style={{ backgroundColor: \"#28203A\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title\r\n              style={{\r\n                fontSize: \"3rem\",\r\n                marginBottom: \"0px\",\r\n                textShadow: \"0 0 15px yellow\",\r\n              }}\r\n            >\r\n              {props.stat}\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"mb-2\" style={{ fontStyle: \"italic\" }}>\r\n              {props.units}\r\n            </Card.Subtitle>\r\n            <Card.Text>\r\n              <span style={{ fontSize: \"1.2rem\" }}>{props.description1}</span><br/>\r\n              <span style={{ color: \"orange\" }}>{props.description2}</span>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    );\r\n    return card;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row xs={1} md={1} xl={2} className=\"g-4\" style={{ paddingTop: \"8px\" }}>\r\n        {data &&\r\n          data.length > 0 &&\r\n          data.map((item, index) => (\r\n            <StatCard\r\n              key={index}\r\n              stat={item.stat}\r\n              units={item.units}\r\n              description1={item.description1}\r\n              description2={item.description2}\r\n            />\r\n          ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./dc.css\";\r\nimport crossfilter from \"crossfilter2\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst CHARTDATA_URL =\r\n  \"https://raw.githubusercontent.com/petehilljnr/parkrun-stats/master/data/chart_data.csv\";\r\nconst LOOKUPDATA_URL =\r\n  \"https://raw.githubusercontent.com/petehilljnr/parkrun-stats/master/data/lookups.json\";\r\n\r\nexport const CXContext = React.createContext(\"CXContext\");\r\n\r\nexport class DataContext extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loading: false, hasNDX: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.hasNDX) {\r\n      return;\r\n    }\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n\r\n    d3.csv(CHARTDATA_URL).then((d) => {\r\n      d3.json(LOOKUPDATA_URL).then((f) => {\r\n        d.forEach((a) => {\r\n          a.actual_holiday = f.actual_holiday[+a.actual_holiday - 1];\r\n          a.age = f.age[+a.age - 1];\r\n          a.gender = f.gender[+a.gender - 1];\r\n          a.holiday_weekend = f.holiday_weekend[+a.holiday_weekend - 1];\r\n          a.tutu = f.tutu[+a.tutu - 1];\r\n          a.section = f.section[+a.section - 1];\r\n          a.age_grading = +a.age_grading;\r\n          a.event_day = +a.event_day;\r\n          a.event_month = +a.event_month;\r\n          a.event_year = +a.event_year;\r\n          a.finish_time = +a.finish_time;\r\n        });\r\n        this.ndx = crossfilter(d); //TODO possibly need to update this\r\n        this.setState({ loading: false, hasNDX: true });\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.hasNDX) {\r\n      return null;\r\n    }\r\n    return (\r\n      <CXContext.Provider value={{ ndx: this.ndx }}>\r\n        <div ref={this.parent}>{this.props.children}</div>\r\n      </CXContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { CXContext } from \"./cxContext\";\r\nimport * as dc from \"dc\";\r\n\r\nconst ResetButton = props => {\r\n  return (\r\n    <span\r\n      style={{float: \"right\", padding: \"0.1rem\", cursor: \"pointer\", color: \"white\", fontSize: \"0.65rem\", textShadow: \"0 0 15px red\",}}\r\n      onClick={() => {\r\n        props.chart.filterAll();\r\n        dc.redrawAll();\r\n      }}\r\n    >\r\n      reset chart\r\n    </span>\r\n  );\r\n};\r\nexport const ChartTemplate = props => {\r\n  const context = React.useContext(CXContext);\r\n  const [chart,updateChart] = React.useState(null);\r\n  const ndx = context.ndx;\r\n  const div = React.useRef(null);\r\n  \r\n  React.useEffect(() => {\r\n    const newChart = props.chartFunction(div.current, ndx); // chartfunction takes the ref and does something with it\r\n\r\n    newChart.render();\r\n    updateChart(newChart);\r\n  },[]); \r\n\r\n  return (\r\n    <div\r\n      ref={div}\r\n    >\r\n    \r\n     <ResetButton chart={chart} /> \r\n     <label style={{fontSize: \"1rem\", color: \"white\", textShadow: \"0 0 15px yellow\"}}>{props.title}</label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport * as dc from \"dc\";\r\nimport * as d3 from \"d3\";\r\nimport { ChartTemplate } from \"./chartTemplate\";\r\n\r\nconst f = (divRef, ndx) => {\r\n  const c = dc.rowChart(divRef);\r\n  const all = ndx.groupAll();\r\n  const dimension = ndx.dimension(function (d) {\r\n    return d.event_year;\r\n  });\r\n\r\n  const subgroup = 'event_num';\r\n\r\n  function reduceAdd(p, v) {\r\n    const grouping = v[subgroup];\r\n    p[grouping] = (p[grouping] || 0) + 1;\r\n    return p;\r\n  }\r\n\r\n  function reduceRemove(p, v) {\r\n    const grouping = v[subgroup];\r\n    p[grouping] = (p[grouping] || 0) - 1;\r\n    if(p[grouping] === 0) {\r\n        delete p[grouping];\r\n    }\r\n    return p;\r\n  }\r\n\r\n  function reduceInitial() {\r\n    return {};\r\n  }\r\n\r\n  const group = dimension.group().reduce(reduceAdd, reduceRemove, reduceInitial);\r\n\r\n  c.dimension(dimension)\r\n    .group(group)\r\n    .height(450)\r\n    .transitionDuration(300)\r\n    .valueAccessor(({key, value}) => Math.round(d3.mean(Object.values(value)) || 0))\r\n    .colors(\"#fcba03\")\r\n    .elasticX(true)\r\n    .ordering((d) => {return -parseInt(d.key);})\r\n    .title(({key, value}) => `${key}: ${Math.round(d3.mean(Object.values(value)) || 0)} runners`)\r\n    .xAxis()\r\n    .ticks(4);\r\n  return c;\r\n};\r\n\r\nexport const YearEventAvg = (props) => (\r\n  <ChartTemplate chartFunction={f} title=\"Avg No. Parkrunners Per Event by Year\" />\r\n);\r\n","import React from \"react\";\r\nimport * as dc from \"dc\";\r\nimport * as d3 from \"d3\";\r\nimport { ChartTemplate } from \"./chartTemplate\";\r\n\r\nconst f = (divRef, ndx) => {\r\n  const c = dc.rowChart(divRef);\r\n  const dimension = ndx.dimension(function (d) {\r\n    return d.event_month;\r\n  });\r\n\r\n  const subgroup = \"event_num\";\r\n\r\n  function reduceAdd(p, v) {\r\n    const grouping = v[subgroup];\r\n    p[grouping] = (p[grouping] || 0) + 1;\r\n    return p;\r\n  }\r\n\r\n  function reduceRemove(p, v) {\r\n    const grouping = v[subgroup];\r\n    p[grouping] = (p[grouping] || 0) - 1;\r\n    if(p[grouping] === 0) {\r\n        delete p[grouping];\r\n    }\r\n    return p;\r\n  }\r\n\r\n  function reduceInitial() {\r\n    return {};\r\n  }\r\n\r\n  const group = dimension\r\n    .group()\r\n    .reduce(reduceAdd, reduceRemove, reduceInitial);\r\n\r\n  c.dimension(dimension)\r\n    .height(450)\r\n    .group(group)\r\n    .label((d) => {\r\n      let date = new Date(2020, parseInt(d.key) - 1, 1);\r\n      return date.toLocaleDateString(\"en-us\", { month: \"long\" });\r\n    })\r\n    .valueAccessor(({key, value}) => Math.round(d3.mean(Object.values(value)) || 0)\r\n        )\r\n    .transitionDuration(300)\r\n    .colors(\"#fcba03\")\r\n    .elasticX(true)\r\n    .ordering((d) => {\r\n      return parseInt(d.key);\r\n    })\r\n    .title(({key, value}) => `${key}: ${Math.round(d3.mean(Object.values(value)) || 0)} runners`)\r\n    .xAxis()\r\n    .ticks(4);\r\n\r\n  return c;\r\n};\r\n\r\nexport const MonthEventAvg = (props) => (\r\n  <ChartTemplate\r\n    chartFunction={f}\r\n    title=\"Avg No. Parkrunners Per Event by Month\"\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport * as dc from \"dc\";\r\nimport * as d3 from \"d3\";\r\nimport { ChartTemplate } from \"./chartTemplate\";\r\n\r\nconst f = (divRef, ndx) => {\r\n  const c = dc.rowChart(divRef);\r\n  const dimension = ndx.dimension(function (d) {\r\n    return d.age;\r\n  });\r\n\r\n  const subgroup = \"event_num\";\r\n\r\n  function reduceAdd(p, v) {\r\n    const grouping = v[subgroup];\r\n    p[grouping] = (p[grouping] || 0) + 1;\r\n    return p;\r\n  }\r\n\r\n  function reduceRemove(p, v) {\r\n    const grouping = v[subgroup];\r\n    p[grouping] = (p[grouping] || 0) - 1;\r\n    if(p[grouping] === 0) {\r\n        delete p[grouping];\r\n    }\r\n    return p;\r\n  }\r\n\r\n  function reduceInitial() {\r\n    return {};\r\n  }\r\n\r\n  const group = dimension\r\n    .group()\r\n    .reduce(reduceAdd, reduceRemove, reduceInitial);\r\n\r\n  c.dimension(dimension)\r\n    .height(450)\r\n    .group(group)\r\n    .valueAccessor(({key, value}) => Math.round(d3.mean(Object.values(value)) || 0))\r\n    .transitionDuration(300)\r\n    .colors(\"#fcba03\")\r\n    .elasticX(true)\r\n    .title(({key, value}) => `${key}: ${Math.round(d3.mean(Object.values(value)) || 0)} runners`)\r\n    .xAxis()\r\n    .ticks(4);\r\n\r\n  return c;\r\n};\r\n\r\nexport const AgeEventAvg = (props) => (\r\n  <ChartTemplate\r\n    chartFunction={f}\r\n    title=\"Avg No. Parkrunners Per Event by Age\"\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport * as dc from \"dc\";\r\nimport * as d3 from \"d3\";\r\nimport { ChartTemplate } from \"./chartTemplate\";\r\n\r\n\r\nconst hoursandminsformat=d3.timeFormat(\"%H:%M:%S\"); \r\n\r\nconst format_time = (minutes) => {\r\n  console.log(minutes)\r\n  const seconds = minutes * 60\r\n  const d = 1391166000000 + (seconds * 1000);\r\n  return hoursandminsformat(new Date(d));\r\n}\r\nconst f = (divRef, ndx) => {\r\n  const c = dc.rowChart(divRef);\r\n  const dimension = ndx.dimension(function (d) {\r\n    return d.age;\r\n  });\r\n\r\n  function reduceAdd(p, v) {\r\n    ++p.count;\r\n    p.total = p.total + (+v.finish_time/60);\r\n    return p;\r\n  }\r\n\r\n  function reduceRemove(p, v) {\r\n    --p.count;\r\n    p.total = p.total - (+v.finish_time/60);\r\n    return p;\r\n  }\r\n\r\n  function reduceInitial() {\r\n    return { total: 0, count: 0};\r\n  }\r\n\r\n  const group = dimension\r\n    .group()\r\n    .reduce(reduceAdd, reduceRemove, reduceInitial);\r\n\r\n  c.dimension(dimension)\r\n    .height(450)\r\n    .group(group)\r\n    .valueAccessor(({key, value}) => value.count == 0 ? 0 : Math.round(value.total / value.count))\r\n    .transitionDuration(300)\r\n    .colors(\"#fcba03\")\r\n    .elasticX(true)\r\n    .title(({key, value}) => value.count == 0 ? 'No results' : `${key}: ${format_time(value.total / value.count) || 0}`)\r\n    .xAxis()\r\n    .ticks(4);\r\n\r\n  return c;\r\n};\r\n\r\nexport const AgeFinishAvg = (props) => (\r\n  <ChartTemplate\r\n    chartFunction={f}\r\n    title=\"Avg Finishing Time by Age\"\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport { YearEventAvg } from \"./yearEventAvg\";\r\nimport { MonthEventAvg } from \"./monthEventAvg\";\r\nimport { AgeEventAvg } from \"./ageEventAvg\";\r\nimport { AgeFinishAvg } from \"./ageFinishAvg\";\r\nimport { DataContext } from \"./cxContext\";\r\n\r\nexport const Dashboard = (props) => {\r\n  return (\r\n    <div>\r\n      <DataContext>\r\n        <Container style={{paddingTop: \"5px\"}}>\r\n          <Row>\r\n            <Col>\r\n              <YearEventAvg />\r\n            </Col>\r\n            <Col>\r\n              <MonthEventAvg />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <AgeEventAvg />\r\n            </Col>\r\n            <Col>\r\n              <AgeFinishAvg />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </DataContext>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Dashboard } from \"../components/dc/dashboard\";\r\n\r\nconst Charts = () => {\r\n  return (\r\n    <Container>\r\n      <Dashboard />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n   return (\r\n    <Container>\r\n      <h1>About {Date.now()}</h1>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export default __webpack_public_path__ + \"static/media/parkrun.23904815.png\";","import React from \"react\";\r\nimport clientLogo from \"../parkrun.png\";\r\nimport styled from \"styled-components\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TitleBar = styled.span`\r\n  margin-left: 1.5rem;\r\n  font-size: 1.2rem;\r\n  height: 80px;\r\n  align-items: center;\r\n  color: white;\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect fixed=\"top\" bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"home\">\r\n            <img\r\n              src={clientLogo}\r\n              alt=\"Parkrun\"\r\n              height={45}\r\n              style={{ transform: \"rotate(90deg)\" }}\r\n            />\r\n            <TitleBar>Bunch o' Stats for Dunedin Parkrun {Date.now()}</TitleBar>\r\n          </Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"navbar-nav\" />\r\n\r\n          <Navbar.Collapse id=\"navbar-nav\" style={{justifyContent: \"flex-end\"}}>\r\n            <Nav>\r\n              <Link className=\"nav-link\" to=\"/home\">Home</Link>\r\n              <Link className=\"nav-link\" to=\"/charts\">Results Charts</Link>\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './App.css';\nimport Cards from './pages/Cards';\nimport Charts from './pages/Charts';\nimport About from './pages/About';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path='/' exact><Cards/></Route>\n        <Route path='/about' exact><About/></Route>\n        <Route path='/charts' exact><Charts/></Route>\n        <Route path='/home' exact><Cards/></Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}